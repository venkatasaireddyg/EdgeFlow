name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Linear history enforcement removed per project policy.

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Lint - black
        run: black --check .

      - name: Type check - mypy
        run: mypy --ignore-missing-imports .

      - name: Run tests (CLI only)
        env:
          PYTHONPATH: .
        run: python -m pytest -q tests --cov=edgeflowc --cov-report=xml --cov-fail-under=75

      - name: Run parser unit tests
        env:
          PYTHONPATH: .
        run: |
          # Optional ANTLR generation if jar present
          if [ -f "grammer/antlr-4.13.1-complete.jar" ]; then \
            java -jar grammer/antlr-4.13.1-complete.jar -Dlanguage=Python3 -o parser grammer/EdgeFlow.g4; \
          else \
            echo "ANTLR jar not found; using fallback parser"; \
          fi
          python -m pytest -q tests/test_parser.py --cov=parser --cov-append --cov-report=xml --cov-fail-under=75

      - name: Generate coverage badge
        run: genbadge coverage -i coverage.xml -o coverage.svg

      - name: Upload coverage badge artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: coverage.svg
